{"version":3,"sources":["common.js","karyawan.js","karyawanHarian.js","absensiHarian.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtpfile":"all.js","sourcesContent":["var commonModule = (function() {\n\n    var datatableBaseURL = 'http://trikemas.app/datatable/';\n\n    var select2BaseURL = '/select2/';\n\n    /* Auto Log Out Setelah Sekian Detik */\n    var autoLogOut = function() {\n        var delay = 1000; // 10 menit (10 * 60 detik * 1000 untuk miliseconds)\n        window.setTimeout(function() {\n            window.location.href = '/logout';\n        }, delay);\n    };\n\n    return {\n        autoLogOut: autoLogOut,\n        datatableBaseURL: datatableBaseURL,\n        select2BaseURL: select2BaseURL\n    };\n\n    autoLogOut();\n\n})();","var karyawanModule = (function(commonModule) {\n\n    var datatableBaseURL = commonModule.datatableBaseURL + 'karyawans';\n    \n    var existing_model = null;\n\n    var init = function() {\n        _applyDatatable();\n        _applyDatepicker();\n        _applyThousandSeperator();\n        _applyAutoNumeric();\n        _applyValidation();\n\n    };\n\n    var _applyAutoNumeric = function() {\n        $(\"#uang_makan\").autoNumeric(\"init\", {\n            vMin: '0',\n            vMax: '9999999999999.99'\n        })\n            .on(\"keyup\", function() {\n                $(\"#frmData\").formValidation(\"revalidateField\", $(\"#uang_makan\"));\n            });\n    };\n\n    var _applyValidation = function() {\n        $('#frmData').formValidation({\n            framework: \"bootstrap\",\n            button: {\n                selector: '#btnSubmit',\n                disabled: 'disabled'\n            },\n            icon: null,\n            fields: {\n                status_karyawan_id: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Status Karyawan harus diisi'\n                        }\n                    }\n                },\n                nik: {\n                    validators: {\n                        notEmpty: {\n                            message: 'NIK harus diisi'\n                        }\n                    }\n                },\n                nama: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Nama harus diisi'\n                        }\n                    }\n                },\n                alamat: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Alamat harus diisi'\n                        }\n                    }\n                },\n                phone: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Alamat harus diisi'\n                        }\n                    }\n                },\n                lulusan: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Lulusan harus diisi'\n                        }\n                    }\n                },\n                tgl_masuk: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Tanggal Masuk harus diisi'\n                        }\n                    }\n                },\n                nilai_upah: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Nilai Upah harus diisi'\n                        }\n                    }\n                },\n                uang_makan: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Alamat harus diisi'\n                        }\n                    }\n                },\n                uang_lembur: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Uang lembur harus diisi'\n                        }\n                    }\n                },\n                norek: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Nomor Rekening harus diisi'\n                        }\n                    }\n                }\n            }\n        });\n\n    };\n\n    var _applyThousandSeperator = function() {\n        $(\"input.number\").each(function() {\n            var input_name = $(this).data('input');\n\n            $(this).autoNumeric('init', {\n                aSep: ',',\n                aDec: '.',\n                aSign: 'Rp ',\n                mDec: '0'\n            });\n\n            $(this).on('change keyup', function() {\n                var value = $(this).val().replace('Rp ', '');\n                $(\"input[name='\" + input_name + \"']\").val(value);\n            });\n        });\n    };\n\n    var _applyDatepicker = function() {\n        $('.datepicker').datepicker({\n            weekStart: 1,\n            todayHighlight: true,\n            clearBtn: true,\n            format: 'yyyy-mm-dd',\n            autoclose: true\n        });\n    };\n\n    \n    var _applyDatatable = function() {\n        /* Tambah Input Field di TFOOT */\n        $('#datatable tfoot th').each(function() {\n            var title = $(this).text();\n            if (title != '') {\n                $(this).html('<input type=\"text\" class=\"form-control\" placeholder=\"Search ' + title + '\" style=\"width: 100%;\" />');\n            }\n            if (title == 'Created Date' || title == 'Updated Date') {\n                $(this).html('<input type=\"text\" class=\"datepicker form-control\" placeholder=\"Search ' + title + '\" style=\"width: 100%;\" />');\n            }\n        });\n\n        var table = $('#datatable').DataTable({\n            processing: true,\n            serverSide: true,\n            ajax: {\n                \"url\": datatableBaseURL,\n                \"type\": \"POST\"\n            },\n            language: {\n                \"decimal\": \",\",\n                \"thousands\": \".\"\n            },\n            columns: [{\n                data: 'status_karyawan_id',\n                name: 'status_karyawans.keterangan'\n            }, {\n                data: 'nik',\n                name: 'karyawans.nik'\n            }, {\n                data: 'nama',\n                name: 'karyawans.nama'\n            }, {\n                data: 'alamat',\n                name: 'karyawans.alamat'\n            }, {\n                data: 'phone',\n                name: 'karyawans.phone'\n            }, {\n                data: 'lulusan',\n                name: 'karyawans.lulusan'\n            }, {\n                data: 'tgl_masuk',\n                name: 'karyawans.tgl_masuk'\n            }, {\n                data: 'nilai_upah',\n                name: 'karyawans.nilai_upah'\n            }, {\n                data: 'uang_makan',\n                name: 'karyawans.uang_makan'\n            }, {\n                data: 'uang_lembur',\n                name: 'karyawans.uang_lembur'\n            }, {\n                data: 'norek',\n                name: 'karyawans.norek'\n            }, {\n                data: 'action',\n                name: 'action',\n                orderable: false,\n                searchable: false\n            }]\n        });\n\n        /* Ketika Value pada Input di TFOOT berubah, Maka Search Sesuai Kolom */\n        table.columns().every(function() {\n            var that = this;\n            $('input', this.footer()).on('keyup change', function() {\n\n                var keyword = this.value;\n\n                if (this.placeholder == 'Search Model' || this.placeholder == 'Search Brand') {\n                    keyword = keyword.toUpperCase();\n                }\n\n                if (that.search() !== keyword) {\n                    that\n                        .search(keyword)\n                        .draw();\n                }\n            });\n        });\n\n    };\n\n    return {\n        init: init\n    };\n\n})(commonModule);","var karyawanHarianModule = (function(commonModule) {\n\n    var datatableBaseURL = commonModule.datatableBaseURL + 'karyawan-harians';\n    \n    var existing_model = null;\n\n    var init = function() {\n        _applyDatatable();\n    };\n    \n    \n    var _applyDatatable = function() {\n        /* Tambah Input Field di TFOOT */\n        $('#datatable tfoot th').each(function() {\n            var title = $(this).text();\n            if (title != '') {\n                $(this).html('<input type=\"text\" class=\"form-control\" placeholder=\"Search ' + title + '\" style=\"width: 100%;\" />');\n            }\n            if (title == 'Created Date' || title == 'Updated Date') {\n                $(this).html('<input type=\"text\" class=\"datepicker form-control\" placeholder=\"Search ' + title + '\" style=\"width: 100%;\" />');\n            }\n        });\n\n        var table = $('#datatable').DataTable({\n            processing: true,\n            serverSide: true,\n            ajax: {\n                \"url\": datatableBaseURL,\n                \"type\": \"POST\"\n            },\n            language: {\n                \"decimal\": \",\",\n                \"thousands\": \".\"\n            },\n            columns: [{\n                data: 'status_karyawan_id',\n                name: 'status_karyawans.keterangan'\n            }, {\n                data: 'nik',\n                name: 'karyawan_harians.nik'\n            }, {\n                data: 'nama',\n                name: 'karyawan_harians.nama'\n            }, {\n                data: 'alamat',\n                name: 'karyawan_harians.alamat'\n            }, {\n                data: 'phone',\n                name: 'karyawan_harians.phone'\n            }, {\n                data: 'lulusan',\n                name: 'karyawan_harians.lulusan'\n            }, {\n                data: 'tgl_masuk',\n                name: 'karyawan_harians.tgl_masuk'\n            }, {\n                data: 'nilai_upah',\n                name: 'karyawan_harians.nilai_upah'\n            }, {\n                data: 'uang_makan',\n                name: 'karyawan_harians.uang_makan'\n            }, {\n                data: 'uang_lembur',\n                name: 'karyawan_harians.uang_lembur'\n            }, {\n                data: 'norek',\n                name: 'karyawan_harians.norek'\n            }, {\n                data: 'action',\n                name: 'action',\n                orderable: false,\n                searchable: false\n            }]\n        });\n\n        /* Ketika Value pada Input di TFOOT berubah, Maka Search Sesuai Kolom */\n        table.columns().every(function() {\n            var that = this;\n            $('input', this.footer()).on('keyup change', function() {\n\n                var keyword = this.value;\n\n                if (this.placeholder == 'Search Model' || this.placeholder == 'Search Brand') {\n                    keyword = keyword.toUpperCase();\n                }\n\n                if (that.search() !== keyword) {\n                    that\n                        .search(keyword)\n                        .draw();\n                }\n            });\n        });\n\n    };\n\n    return {\n        init: init\n    };\n\n})(commonModule);","var absensiHarianModule = (function(commonModule) {\n\n    var datatableBaseURL = commonModule.datatableBaseURL + 'absensi-harians';\n\n    var existing_model = null;\n\n    var init = function() {\n        _applyDatatable();\n        _applyDatepicker();\n        _applyThousandSeperator();\n\n    };\n\n    var _applyAutoNumeric = function() {\n        $(\"#harga\").autoNumeric(\"init\", {\n                vMin: '0',\n                vMax: '9999999999999.99'\n            })\n            .on(\"keyup\", function() {\n                $(\"#frmData\").formValidation(\"revalidateField\", $(\"#harga\"));\n            });\n    };\n\n    var _applyValidation = function() {\n        alert('hello');\n        $('#frmData').formValidation({\n            framework: \"bootstrap\",\n            button: {\n                selector: '#btnSubmit',\n                disabled: 'disabled'\n            },\n            icon: null,\n            fields: {\n                status_karyawan_id: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Status Karyawan harus diisi'\n                        }\n                    }\n                },\n                nik: {\n                    validators: {\n                        notEmpty: {\n                            message: 'NIK harus diisi'\n                        }\n                    }\n                },\n                nama: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Nama harus diisi'\n                        }\n                    }\n                },\n                alamat: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Alamat harus diisi'\n                        }\n                    }\n                },\n                phone: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Alamat harus diisi'\n                        }\n                    }\n                },\n                lulusan: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Lulusan harus diisi'\n                        }\n                    }\n                },\n                tgl_masuk: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Tanggal Masuk harus diisi'\n                        }\n                    }\n                },\n                nilai_upah: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Nilai Upah harus diisi'\n                        }\n                    }\n                },\n                uang_makan: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Alamat harus diisi'\n                        }\n                    }\n                },\n                uang_lembur: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Uang lembur harus diisi'\n                        }\n                    }\n                },\n                norek: {\n                    validators: {\n                        notEmpty: {\n                            message: 'Nomor Rekening harus diisi'\n                        }\n                    }\n                }\n            }\n        });\n\n    };\n\n    var _applyThousandSeperator = function() {\n        $(\"input.number\").each(function() {\n            var input_name = $(this).data('input');\n\n            $(this).autoNumeric('init', {\n                aSep: ',',\n                aDec: '.',\n                aSign: 'Rp ',\n                mDec: '0'\n            });\n\n            $(this).on('change keyup', function() {\n                var value = $(this).val().replace('Rp ', '');\n                $(\"input[name='\" + input_name + \"']\").val(value);\n            });\n        });\n    };\n\n    var _applyDatepicker = function() {\n        $('.datepicker').datepicker({\n            weekStart: 1,\n            todayHighlight: true,\n            clearBtn: true,\n            format: 'yyyy-mm-dd',\n            autoclose: true\n        });\n    };\n\n\n    var _applyDatatable = function() {\n        /* Tambah Input Field di TFOOT */\n        $('#datatable tfoot th').each(function() {\n            var title = $(this).text();\n            if (title != '') {\n                $(this).html('<input type=\"text\" class=\"form-control\" placeholder=\"Search ' + title + '\" style=\"width: 100%;\" />');\n            }\n            if (title == 'Created Date' || title == 'Updated Date' || title == 'Tanggal') {\n                $(this).html('<input type=\"text\" class=\"datepicker form-control\" placeholder=\"Search ' + title + '\" style=\"width: 100%;\" />');\n            }\n        });\n\n        var table = $('#datatable').DataTable({\n            processing: true,\n            serverSide: true,\n            ajax: {\n                \"url\": datatableBaseURL,\n                \"type\": \"POST\"\n            },\n            language: {\n                \"decimal\": \",\",\n                \"thousands\": \".\"\n            },\n            columns: [{\n                data: 'created_at',\n                name: 'absensi_harians.created_at'\n            }, {\n                data: 'nama',\n                name: 'karyawans.nama'\n            }, {\n                data: 'jam_masuk',\n                name: 'absensi_harians.jam_masuk'\n            }, {\n                data: 'jam_keluar',\n                name: 'absensi_harians.jam_keluar'\n            }, {\n                data: 'jam_lembur',\n                name: 'absensi_harians.jam_lembur'\n            }, {\n                data: 'status',\n                name: 'absensi_harians.status'\n            }, {\n                data: 'action',\n                name: 'action',\n                orderable: false,\n                searchable: false\n            }]\n        });\n\n        /* Ketika Value pada Input di TFOOT berubah, Maka Search Sesuai Kolom */\n        table.columns().every(function() {\n            var that = this;\n            $('input', this.footer()).on('keyup change', function() {\n\n                var keyword = this.value;\n\n                if (this.placeholder == 'Search Model' || this.placeholder == 'Search Brand') {\n                    keyword = keyword.toUpperCase();\n                }\n\n                if (that.search() !== keyword) {\n                    that\n                        .search(keyword)\n                        .draw();\n                }\n            });\n        });\n\n    };\n\n    var showDetail = function(id) {\n\n        $.ajax({\n            method: \"GET\",\n            url: \"/upload-absen/\" + id,\n            dataType: \"json\",\n        }).done(function(response) {\n\n            if (response.status == 1) {\n\n                /* Clear Modal Body */\n                $('#absensi_modal').find(\".modal-title\").html(\"\");\n                $('#absensi_modal').find(\".modal-body\").html(\"\");\n\n                /* Insert Data to Modal Body */\n\n\n\n\n                $('#absensi_modal').find(\".modal-body\").append('<table class=\"table table-bordered table-striped\"><thead><tr><th>NIK</th><th>Nama</th><th>Status Karyawan</th></tr></thead><tbody>');\n\n                $.each(response.records, function(i, record) {\n                    $('#absensi_modal').find(\"tbody\").append(\"<tr><td>\" + record.nik + \"</td><td>\" + record.nama + \"</td><td>\" + record.keterangan + \"</td></tr>\");\n\n                });\n\n                $('#absensi_modal').find(\".modal-body\").append(\"</table>\");\n\n\n                /* Finally show */\n                $('#absensi_modal').modal();\n            } else {\n                alert('not Saved');\n            }\n\n        }).fail(function(response) {\n\n        });\n    };\n\n    return {\n        init: init,\n        showDetail: showDetail\n    };\n\n})(commonModule);"],"sourceRoot":"/source/"}